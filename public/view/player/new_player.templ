package player

import (
	"dfc/public/component"
	"dfc/types"
	"dfc/public/view"
	"dfc/public/layout"
)

templ Form(params types.PlayerParams, errors types.PlayerErrors) {
	<form id="new-player-form" method="post" action="/players">
		<div class="grid gap-10 mb-8">
			@component.TextInput(component.InputConfig{
				Name:     "name",
				ID:       "name",
				Label:    "Player name",
				Required: true,
				Error:    errors.Name,
				Value:    params.Name,
				Hint:     "Choose something unique to this league",
			})
			@deckRadios(component.InputConfig{Error: errors.Deck, Value: params.Deck})
			@component.Button(component.ButtonConfig{Type: "submit"}) {
				Create player
			}
		</div>
	</form>
}

templ deckRadios(config component.InputConfig) {
	<fieldset id="deck-input" class="flex flex-col">
		<legend class="text-sm font-semibold leading-7">Starter deck</legend>
		<p class="mt-2 text-sm leading-6 text-zinc-400">This cannot be changed later</p>
		<div class="mt-4 space-y-6">
			<div class="">
				<label for="token-triumph" class="flex items-center text-sm font-medium leading-7 cursor-pointer gap-x-3">
					<input value="tokens" id="token-triumph" name="deck" type="radio" class="w-5 h-5 text-indigo-600 border-zinc-300 focus:ring-indigo-600"/>
					Token Triumph
				</label>
			</div>
			<div class="">
				<label for="grave-danger" class="flex items-center text-sm font-medium leading-7 cursor-pointer gap-x-3">
					<input value="zombies" id="grave-danger" name="deck" type="radio" class="w-5 h-5 text-indigo-600 border-zinc-300 focus:ring-indigo-600"/>
					Grave Danger
				</label>
			</div>
			<div class="">
				<label for="dragonic-destruction" class="flex items-center text-sm font-medium leading-7 cursor-pointer gap-x-3">
					<input value="dragons" id="dragonic-destruction" name="deck" type="radio" class="w-5 h-5 text-indigo-600 border-zinc-300 focus:ring-indigo-600"/>
					Draconic Destruction
				</label>
			</div>
			<div class="">
				<label for="chaos-incarnate" class="flex items-center text-sm font-medium leading-7 cursor-pointer gap-x-3">
					<input value="goad" id="chaos-incarnate" name="deck" type="radio" class="w-5 h-5 text-indigo-600 border-zinc-300 focus:ring-indigo-600"/>
					Chaos Incarnate
				</label>
			</div>
			<div class="">
				<label for="first-flight" class="flex items-center text-sm font-medium leading-7 cursor-pointer gap-x-3">
					<input value="flying" id="first-flight" name="deck" type="radio" class="w-5 h-5 text-indigo-600 border-zinc-300 focus:ring-indigo-600"/>
					First Flight
				</label>
			</div>
			if config.Error != "" {
				@component.InputError("deck-input", config.Error)
			}
		</div>
	</fieldset>
}

templ NewPlayer() {
	@NewPlayerWithErrors(types.PlayerParams{}, types.PlayerErrors{})
}

templ NewPlayerWithErrors(params types.PlayerParams, errors types.PlayerErrors) {
	@layout.Form() {
		<div class="max-w-lg p-4 mx-auto sm:p-6 lg:p-8">
			<div class="flex flex-col space-y-10 mt-11">
				<h1 class="text-lg font-bold tracking-tight text-white sm:text-xl">New Player</h1>
				if msg := view.GetFlash(ctx, "error"); msg != "" {
					@component.Flash(msg, "error")
				}
				@Form(params, errors)
			</div>
		</div>
	}
}
